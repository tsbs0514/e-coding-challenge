name: Deploy Frontend Challenge 2

on:
  push:
    branches: [master, main]
    paths:
      - "frontend_challenge_2/challenges/tsbs0514/**"
  pull_request:
    branches: [master, main]
    paths:
      - "frontend_challenge_2/challenges/tsbs0514/**"

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "frontend_challenge_2/challenges/tsbs0514/package-lock.json"

      - name: Install dependencies
        working-directory: frontend_challenge_2/challenges/tsbs0514
        run: npm ci

      - name: Run tests
        working-directory: frontend_challenge_2/challenges/tsbs0514
        run: npm test

      - name: Run E2E tests
        working-directory: frontend_challenge_2/challenges/tsbs0514
        run: npm run test:e2e

      - name: Build application
        working-directory: frontend_challenge_2/challenges/tsbs0514
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: frontend_challenge_2/challenges/tsbs0514/out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
